{"ast":null,"code":"import _slicedToArray from \"/Users/valiantwong/Documents/JS-training/Archive/habit-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { createContext, Component, useState, useReducer, useEffect } from \"react\";\nexport var ThemeContext = createContext();\nvar originalState = {\n  isLightTheme: true,\n  light: {\n    mode: 'light',\n    syntax: '#555',\n    ui: '#ddd',\n    bg: '#eee'\n  }\n};\n\nfunction themeReducer(state, action) {\n  switch (action.type) {\n    case 'LIGHT':\n      {\n        return {\n          isLightTheme: true,\n          light: {\n            mode: 'light',\n            syntax: '#555',\n            ui: '#ddd',\n            bg: '#eee'\n          }\n        };\n      }\n\n    case 'DARK':\n      {\n        return {\n          isLightTheme: false,\n          light: {\n            mode: 'dark',\n            syntax: '#ddd',\n            ui: '#333',\n            bg: '#555'\n          }\n        };\n      }\n\n    default:\n      {\n        return {\n          isLightTheme: true,\n          light: {\n            mode: 'light',\n            syntax: '#555',\n            ui: '#ddd',\n            bg: '#eee'\n          }\n        };\n      }\n  }\n}\n\nfunction ThemeContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _React$useReducer = React.useReducer(themeReducer, {\n    count: 0\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n} // class ThemeContextProvider extends Component{\n//     state={\n//         isLightTheme : true,\n//         light:{ mode: 'light',syntax : '#555', ui:'#ddd', bg: '#eee'},\n//         dark:{mode :' dark',syntax : '#ddd', ui:'#333', bg: '#555'},\n//     }\n//     changeTheme = this.changeTheme.bind(this);\n//     changeTheme() {\n//         const state = this.state\n//         state.isLightTheme=!state.isLightTheme\n//          this.setState ={\n//             state\n//         }\n//         // this.state.isLightTheme=!this.state.isLightTheme;\n//         console.log(this.state.isLightTheme)\n//     }\n//     render(){\n//         return(\n//             <ThemeContext.Provider value={{...this.state, changeTheme :this.changeTheme}}>\n//                 {this.props.children}\n//             </ThemeContext.Provider>\n//         );\n//     }\n// }\n\n\nexport default ThemeContextProvider;","map":{"version":3,"names":["React","createContext","Component","useState","useReducer","useEffect","ThemeContext","originalState","isLightTheme","light","mode","syntax","ui","bg","themeReducer","state","action","type","ThemeContextProvider","children","count","dispatch"],"sources":["/Users/valiantwong/Documents/JS-training/Archive/habit-app/client/src/context/ThemeContext.js"],"sourcesContent":["import React, {createContext, Component, useState, useReducer, useEffect} from \"react\";\n\nexport const ThemeContext = createContext();\n\nconst originalState ={isLightTheme : true,\n                    light:{ mode: 'light',syntax : '#555', ui:'#ddd', bg: '#eee'}\n                        }\nfunction themeReducer(state, action){\n    switch(action.type){\n        case 'LIGHT': {\n        return {isLightTheme : true,\n                light:{ mode: 'light',syntax : '#555', ui:'#ddd', bg: '#eee'}\n            }\n        }\n        case 'DARK' : {\n            return {isLightTheme : false,\n                light:{ mode: 'dark',syntax : '#ddd', ui:'#333', bg: '#555'}\n            }\n        }\n        default : {\n        return {isLightTheme : true,\n            light:{ mode: 'light',syntax : '#555', ui:'#ddd', bg: '#eee'}\n            }           \n        }\n    }\n}\n\nfunction ThemeContextProvider ({children}){\n    const [state, dispatch] = React.useReducer(themeReducer, {count: 0})\n\n}\n\n\n// class ThemeContextProvider extends Component{\n//     state={\n//         isLightTheme : true,\n//         light:{ mode: 'light',syntax : '#555', ui:'#ddd', bg: '#eee'},\n//         dark:{mode :' dark',syntax : '#ddd', ui:'#333', bg: '#555'},\n\n//     }\n//     changeTheme = this.changeTheme.bind(this);\n\n//     changeTheme() {\n\n//         const state = this.state\n//         state.isLightTheme=!state.isLightTheme\n//          this.setState ={\n//             state\n//         }\n//         // this.state.isLightTheme=!this.state.isLightTheme;\n//         console.log(this.state.isLightTheme)\n\n  \n//     }\n\n\n\n\n\n\n//     render(){\n//         return(\n//             <ThemeContext.Provider value={{...this.state, changeTheme :this.changeTheme}}>\n//                 {this.props.children}\n//             </ThemeContext.Provider>\n//         );\n//     }\n// }\nexport default ThemeContextProvider"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,EAAmDC,UAAnD,EAA+DC,SAA/D,QAA+E,OAA/E;AAEA,OAAO,IAAMC,YAAY,GAAGL,aAAa,EAAlC;AAEP,IAAMM,aAAa,GAAE;EAACC,YAAY,EAAG,IAAhB;EACDC,KAAK,EAAC;IAAEC,IAAI,EAAE,OAAR;IAAgBC,MAAM,EAAG,MAAzB;IAAiCC,EAAE,EAAC,MAApC;IAA4CC,EAAE,EAAE;EAAhD;AADL,CAArB;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAoC;EAChC,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,OAAL;MAAc;QACd,OAAO;UAACT,YAAY,EAAG,IAAhB;UACCC,KAAK,EAAC;YAAEC,IAAI,EAAE,OAAR;YAAgBC,MAAM,EAAG,MAAzB;YAAiCC,EAAE,EAAC,MAApC;YAA4CC,EAAE,EAAE;UAAhD;QADP,CAAP;MAGC;;IACD,KAAK,MAAL;MAAc;QACV,OAAO;UAACL,YAAY,EAAG,KAAhB;UACHC,KAAK,EAAC;YAAEC,IAAI,EAAE,MAAR;YAAeC,MAAM,EAAG,MAAxB;YAAgCC,EAAE,EAAC,MAAnC;YAA2CC,EAAE,EAAE;UAA/C;QADH,CAAP;MAGH;;IACD;MAAU;QACV,OAAO;UAACL,YAAY,EAAG,IAAhB;UACHC,KAAK,EAAC;YAAEC,IAAI,EAAE,OAAR;YAAgBC,MAAM,EAAG,MAAzB;YAAiCC,EAAE,EAAC,MAApC;YAA4CC,EAAE,EAAE;UAAhD;QADH,CAAP;MAGC;EAfL;AAiBH;;AAED,SAASK,oBAAT,OAA0C;EAAA,IAAVC,QAAU,QAAVA,QAAU;;EAAA,wBACZnB,KAAK,CAACI,UAAN,CAAiBU,YAAjB,EAA+B;IAACM,KAAK,EAAE;EAAR,CAA/B,CADY;EAAA;EAAA,IAC/BL,KAD+B;EAAA,IACxBM,QADwB;AAGzC,C,CAGD;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeH,oBAAf"},"metadata":{},"sourceType":"module"}