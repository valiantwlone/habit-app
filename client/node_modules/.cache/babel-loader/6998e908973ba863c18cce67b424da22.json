{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/valiantwong/Documents/JS-training/Archive/habit-app/client/src/components/task/Task.jsx\";\n\nimport React from 'react';\nimport \"./task.css\";\nimport TextareaAutosize from 'react-textarea-autosize';\n\nvar Task = function Task(props) {\n  var taskElements = props.tasks.map(function (task, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-container\",\n      key: task._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"taskId\",\n      name: \"id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, parseInt(task.id) + 1), /*#__PURE__*/React.createElement(\"div\", {\n      className: task.ticked ? 'tick' : \"untick\",\n      name: \"ticked\",\n      onClick: function onClick() {\n        console.log(task.id);\n        props.updateTicked(task.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n      id: task.id,\n      name: \"body\",\n      className: \"task\",\n      placeholder: \"Task\",\n      onClick: function onClick(event) {\n        return props.setCurrentTaskId(event.target.id);\n      },\n      onChange: props.updateTask,\n      value: task.body,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }))));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, taskElements));\n};\n\nexport default Task;","map":{"version":3,"names":["React","TextareaAutosize","Task","props","taskElements","tasks","map","task","index","_id","parseInt","id","ticked","console","log","updateTicked","event","setCurrentTaskId","target","updateTask","body"],"sources":["/Users/valiantwong/Documents/JS-training/Archive/habit-app/client/src/components/task/Task.jsx"],"sourcesContent":["import React from 'react'\nimport \"./task.css\"\nimport TextareaAutosize from 'react-textarea-autosize';\n\n\nconst Task = (props) => {\n\n\n    const taskElements= props.tasks.map((task,index) =>(\n    \n    <div>\n        <div className=\"task-container\" key={task._id}>\n\n            <h1 className='taskId' name=\"id\">{parseInt(task.id)+1}</h1>\n            <div\n             className= {task.ticked ?'tick' : \"untick\"}\n             name=\"ticked\"\n             onClick={()=>{console.log(task.id); props.updateTicked(task.id)}}\n            ></div>\n            <div>\n                <TextareaAutosize \n                id={task.id}\n                name=\"body\" \n                className=\"task\" \n                placeholder='Task'\n                onClick={(event)=>(props.setCurrentTaskId(event.target.id))}\n                onChange={props.updateTask}\n                value={task.body}\n                />\n            </div>\n        </div>\n\n        { \n            \n        }\n\n    </div>\n\n    ))\n\n  return (\n    <div>\n        <div>\n            {taskElements}\n        </div>\n\n        {/* {isEmpty &&\n        <div className=\"task-container\">\n            <h1 className='taskId' name=\"id\">{parseInt(currentTask.taskId) + 1 }</h1>\n            <div className='tick'></div>\n            <input name=\"body\" type=\"text\" className=\"task\" placeholder='New Task' onChange={handleChange}/>\n        </div> } */}\n        \n    </div>\n  )\n}\n\nexport default Task"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;EAGpB,IAAMC,YAAY,GAAED,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAMC,KAAN;IAAA,oBAEpC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI;MAAK,SAAS,EAAC,gBAAf;MAAgC,GAAG,EAAED,IAAI,CAACE,GAA1C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAEI;MAAI,SAAS,EAAC,QAAd;MAAuB,IAAI,EAAC,IAA5B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAkCC,QAAQ,CAACH,IAAI,CAACI,EAAN,CAAR,GAAkB,CAApD,CAFJ,eAGI;MACC,SAAS,EAAGJ,IAAI,CAACK,MAAL,GAAa,MAAb,GAAsB,QADnC;MAEC,IAAI,EAAC,QAFN;MAGC,OAAO,EAAE,mBAAI;QAACC,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACI,EAAjB;QAAsBR,KAAK,CAACY,YAAN,CAAmBR,IAAI,CAACI,EAAxB;MAA4B,CAHjE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAHJ,eAQI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,gBAAD;MACA,EAAE,EAAEJ,IAAI,CAACI,EADT;MAEA,IAAI,EAAC,MAFL;MAGA,SAAS,EAAC,MAHV;MAIA,WAAW,EAAC,MAJZ;MAKA,OAAO,EAAE,iBAACK,KAAD;QAAA,OAAUb,KAAK,CAACc,gBAAN,CAAuBD,KAAK,CAACE,MAAN,CAAaP,EAApC,CAAV;MAAA,CALT;MAMA,QAAQ,EAAER,KAAK,CAACgB,UANhB;MAOA,KAAK,EAAEZ,IAAI,CAACa,IAPZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ,CARJ,CADJ,CAFoC;EAAA,CAAhB,CAApB;EAgCF,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKhB,YADL,CADJ,CADF;AAeD,CAlDD;;AAoDA,eAAeF,IAAf"},"metadata":{},"sourceType":"module"}