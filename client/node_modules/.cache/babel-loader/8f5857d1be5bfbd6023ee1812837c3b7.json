{"ast":null,"code":"import React, { createContext, Component, useState, useReducer, useEffect } from \"react\";\nexport var ThemeContext = createContext();\n\nfunction themeReducer(state, action) {\n  switch (action.type) {\n    case 'LIGHT':\n      {\n        return {\n          isLightTheme: true,\n          light: {\n            mode: 'light',\n            syntax: '#555',\n            ui: '#ddd',\n            bg: '#eee'\n          }\n        };\n      }\n\n    case 'DARK':\n      {\n        return {\n          isLightTheme: false,\n          light: {\n            mode: 'dark',\n            syntax: '#ddd',\n            ui: '#333',\n            bg: '#555'\n          }\n        };\n      }\n  }\n} // class ThemeContextProvider extends Component{\n//     state={\n//         isLightTheme : true,\n//         light:{ mode: 'light',syntax : '#555', ui:'#ddd', bg: '#eee'},\n//         dark:{mode :' dark',syntax : '#ddd', ui:'#333', bg: '#555'},\n//     }\n//     changeTheme = this.changeTheme.bind(this);\n//     changeTheme() {\n//         const state = this.state\n//         state.isLightTheme=!state.isLightTheme\n//          this.setState ={\n//             state\n//         }\n//         // this.state.isLightTheme=!this.state.isLightTheme;\n//         console.log(this.state.isLightTheme)\n//     }\n//     render(){\n//         return(\n//             <ThemeContext.Provider value={{...this.state, changeTheme :this.changeTheme}}>\n//                 {this.props.children}\n//             </ThemeContext.Provider>\n//         );\n//     }\n// }\n\n\nexport default ThemeContextProvider;","map":{"version":3,"names":["React","createContext","Component","useState","useReducer","useEffect","ThemeContext","themeReducer","state","action","type","isLightTheme","light","mode","syntax","ui","bg","ThemeContextProvider"],"sources":["/Users/valiantwong/Documents/JS-training/Archive/habit-app/client/src/context/ThemeContext.js"],"sourcesContent":["import React, {createContext, Component, useState, useReducer, useEffect} from \"react\";\n\nexport const ThemeContext = createContext();\n\n\nfunction themeReducer(state, action){\n    switch(action.type){\n        case 'LIGHT': {\n        return {isLightTheme : true,\n                light:{ mode: 'light',syntax : '#555', ui:'#ddd', bg: '#eee'}\n            }\n        }\n        case 'DARK' : {\n            return {isLightTheme : false,\n                light:{ mode: 'dark',syntax : '#ddd', ui:'#333', bg: '#555'}\n            }\n\n        }\n    }\n}\n\n\n\n// class ThemeContextProvider extends Component{\n//     state={\n//         isLightTheme : true,\n//         light:{ mode: 'light',syntax : '#555', ui:'#ddd', bg: '#eee'},\n//         dark:{mode :' dark',syntax : '#ddd', ui:'#333', bg: '#555'},\n\n//     }\n//     changeTheme = this.changeTheme.bind(this);\n\n//     changeTheme() {\n\n//         const state = this.state\n//         state.isLightTheme=!state.isLightTheme\n//          this.setState ={\n//             state\n//         }\n//         // this.state.isLightTheme=!this.state.isLightTheme;\n//         console.log(this.state.isLightTheme)\n\n  \n//     }\n\n\n\n\n\n\n//     render(){\n//         return(\n//             <ThemeContext.Provider value={{...this.state, changeTheme :this.changeTheme}}>\n//                 {this.props.children}\n//             </ThemeContext.Provider>\n//         );\n//     }\n// }\nexport default ThemeContextProvider"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,EAAmDC,UAAnD,EAA+DC,SAA/D,QAA+E,OAA/E;AAEA,OAAO,IAAMC,YAAY,GAAGL,aAAa,EAAlC;;AAGP,SAASM,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAoC;EAChC,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,OAAL;MAAc;QACd,OAAO;UAACC,YAAY,EAAG,IAAhB;UACCC,KAAK,EAAC;YAAEC,IAAI,EAAE,OAAR;YAAgBC,MAAM,EAAG,MAAzB;YAAiCC,EAAE,EAAC,MAApC;YAA4CC,EAAE,EAAE;UAAhD;QADP,CAAP;MAGC;;IACD,KAAK,MAAL;MAAc;QACV,OAAO;UAACL,YAAY,EAAG,KAAhB;UACHC,KAAK,EAAC;YAAEC,IAAI,EAAE,MAAR;YAAeC,MAAM,EAAG,MAAxB;YAAgCC,EAAE,EAAC,MAAnC;YAA2CC,EAAE,EAAE;UAA/C;QADH,CAAP;MAIH;EAXL;AAaH,C,CAID;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeC,oBAAf"},"metadata":{},"sourceType":"module"}