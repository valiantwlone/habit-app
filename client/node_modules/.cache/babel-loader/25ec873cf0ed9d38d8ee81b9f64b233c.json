{"ast":null,"code":"var _jsxFileName = \"/Users/valiantwong/Documents/JS-training/Archive/habit-app/src/components/task/Task.jsx\";\nimport React from 'react';\nimport \"./task.css\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = props => {\n  console.log(props.tasks);\n  const taskElements = props.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"taskId\",\n        name: \"id\",\n        children: task.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: task.ticked ? 'tick' : \"untick\",\n        name: \"ticked\",\n        onClick: () => {\n          console.log(task.id);\n          props.updateTicked(task.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n          name: \"body\",\n          className: \"task\",\n          placeholder: \"Task\",\n          onClick: () => (props.setCurrentTaskId(task.id), console.log(props.currentTaskId)),\n          onChange: props.updateTask,\n          value: task.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), props.tasks.length === task.id && task.body != null && props.createNewTask(task.id, props.tasks)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: taskElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","TextareaAutosize","Task","props","console","log","tasks","taskElements","map","task","index","id","ticked","updateTicked","setCurrentTaskId","currentTaskId","updateTask","body","length","createNewTask"],"sources":["/Users/valiantwong/Documents/JS-training/Archive/habit-app/src/components/task/Task.jsx"],"sourcesContent":["import React from 'react'\nimport \"./task.css\"\nimport TextareaAutosize from 'react-textarea-autosize';\n\n\nconst Task = (props) => {\n    \n    console.log(props.tasks)\n\n    const taskElements= props.tasks.map((task,index) =>(\n        \n    <div>\n        <div className=\"task-container\">\n\n            <h1 className='taskId' name=\"id\">{task.id}</h1>\n            <div\n             className= {task.ticked ?'tick' : \"untick\"}\n             name=\"ticked\"\n             onClick={()=>{console.log(task.id); props.updateTicked(task.id)}}\n            ></div>\n            <div>\n                <TextareaAutosize \n                name=\"body\" \n                className=\"task\" \n                placeholder='Task'\n                onClick={() => (props.setCurrentTaskId(task.id),console.log(props.currentTaskId))\n                } \n                onChange={props.updateTask}\n                value={task.body}\n                />\n            </div>\n        </div>\n\n        { \n            (props.tasks.length === task.id && task.body!=null) && props.createNewTask(task.id, props.tasks)\n        }\n\n    </div>\n\n    ))\n\n  return (\n    <div>\n        <div>\n            {taskElements}\n        </div>\n\n        {/* {isEmpty &&\n        <div className=\"task-container\">\n            <h1 className='taskId' name=\"id\">{parseInt(currentTask.taskId) + 1 }</h1>\n            <div className='tick'></div>\n            <input name=\"body\" type=\"text\" className=\"task\" placeholder='New Task' onChange={handleChange}/>\n        </div> } */}\n        \n    </div>\n  )\n}\n\nexport default Task"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAEpBC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;EAEA,MAAMC,YAAY,GAAEJ,KAAK,CAACG,KAAN,CAAYE,GAAZ,CAAgB,CAACC,IAAD,EAAMC,KAAN,kBAEpC;IAAA,wBACI;MAAK,SAAS,EAAC,gBAAf;MAAA,wBAEI;QAAI,SAAS,EAAC,QAAd;QAAuB,IAAI,EAAC,IAA5B;QAAA,UAAkCD,IAAI,CAACE;MAAvC;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QACC,SAAS,EAAGF,IAAI,CAACG,MAAL,GAAa,MAAb,GAAsB,QADnC;QAEC,IAAI,EAAC,QAFN;QAGC,OAAO,EAAE,MAAI;UAACR,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACE,EAAjB;UAAsBR,KAAK,CAACU,YAAN,CAAmBJ,IAAI,CAACE,EAAxB;QAA4B;MAHjE;QAAA;QAAA;QAAA;MAAA,QAHJ,eAQI;QAAA,uBACI,QAAC,gBAAD;UACA,IAAI,EAAC,MADL;UAEA,SAAS,EAAC,MAFV;UAGA,WAAW,EAAC,MAHZ;UAIA,OAAO,EAAE,OAAOR,KAAK,CAACW,gBAAN,CAAuBL,IAAI,CAACE,EAA5B,GAAgCP,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACY,aAAlB,CAAvC,CAJT;UAMA,QAAQ,EAAEZ,KAAK,CAACa,UANhB;UAOA,KAAK,EAAEP,IAAI,CAACQ;QAPZ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAuBSd,KAAK,CAACG,KAAN,CAAYY,MAAZ,KAAuBT,IAAI,CAACE,EAA5B,IAAkCF,IAAI,CAACQ,IAAL,IAAW,IAA9C,IAAuDd,KAAK,CAACgB,aAAN,CAAoBV,IAAI,CAACE,EAAzB,EAA6BR,KAAK,CAACG,KAAnC,CAvB/D;EAAA;IAAA;IAAA;IAAA;EAAA,QAFoB,CAApB;EAgCF,oBACE;IAAA,uBACI;MAAA,UACKC;IADL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAnDD;;KAAML,I;AAqDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}